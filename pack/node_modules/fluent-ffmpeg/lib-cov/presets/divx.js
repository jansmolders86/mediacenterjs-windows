// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "lib/presets/divx.js",[4,5]);
_$jscoverage_init(_$jscoverage_cond, "lib/presets/divx.js",[]);
_$jscoverage["lib/presets/divx.js"].source = ["/*jshint node:true */","'use strict';","","exports.load = function(ffmpeg) {","  ffmpeg","    .format('avi')","    .videoBitrate('1024k')","    .videoCodec('mpeg4')","    .size('720x?')","    .audioBitrate('128k')","    .audioChannels(2)","    .audioCodec('libmp3lame')","    .outputOptions(['-vtag DIVX']);","};"];
"use strict";

_$jscoverage_done("lib/presets/divx.js", 4);
exports.load = function(ffmpeg) {
    _$jscoverage_done("lib/presets/divx.js", 5);
    ffmpeg.format("avi").videoBitrate("1024k").videoCodec("mpeg4").size("720x?").audioBitrate("128k").audioChannels(2).audioCodec("libmp3lame").outputOptions([ "-vtag DIVX" ]);
};