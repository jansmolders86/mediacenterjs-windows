{
  "name": "exec-queue",
  "version": "0.0.2",
  "description": "Safely run exec in a loop.",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "exec",
    "queue",
    "safe",
    "EMFILE",
    "child",
    "process",
    "limit"
  ],
  "author": {
    "name": "Nick Desaulniers"
  },
  "license": "Beerware",
  "repository": {
    "type": "git",
    "url": "https://github.com/nickdesaulniers/exec-queue.git"
  },
  "readme": "#Exec Queue\nSafely run exec in a loop.\n\nI ran into an `Error: spawn EMFILE` when trying to call exec too many times\n(ie. in a loop).  This module safely packages exec so that you may use it in a\nloop without creating too many child processes.\n\n##Usage\n`npm install exec-queue`\n\n```javascript\nvar exec = require('exec-queue');\nfor (var i = 0; i < 100; ++i) {\n  exec('ls', function (err, stdout, stderr) {\n    console.log(stdout);\n  });\n}\n```\n\nTry the above example with `require('child_process').exec` instead. ;)\n\nThe current limit is 10 child processes running simultaneously.  I did not test\nthe limit (maybe it can be queried by OS). If you need more, please file an\nissue, as I could add to the API to be able to specify the limit.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nickdesaulniers/exec-queue/issues"
  },
  "homepage": "https://github.com/nickdesaulniers/exec-queue",
  "_id": "exec-queue@0.0.2",
  "dist": {
    "shasum": "1cb6ce54b400cf7cb322c84b7929f7bc48cd8374"
  },
  "_from": "exec-queue@>=0.0.2",
  "_resolved": "https://registry.npmjs.org/exec-queue/-/exec-queue-0.0.2.tgz"
}
