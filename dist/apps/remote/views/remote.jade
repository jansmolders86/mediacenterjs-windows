extends /layout

block declarations
	- additional_title = '#{lingua.Remote}'; //- TODO: Translate this
	- body_id = 'remote';
	- include_validation = true;

block additional_metadata
	meta(name="HandheldFriendly" content="true")
	meta(name="viewport" content="width=device-width initial-scale=1, maximum-scale=1, user-scalable=no")

block additional_scripts
	script.
		$(function(){
			$('.validate-form').validate();
		
			var viewPortHeight = $(window).height();
			$('#settings, #setupRemote').height(viewPortHeight - 20);
		
			window.scrollTo(0,0);
			
			$('i.ellipsis.vertical.icon.settings').on('click touchstart', function(){
				$('#settings').toggleClass('show');
			});
			
			$('.keyboard.link').on('click', function(e){
				$('#keyboard-wrapper').toggle();
			});
			
			$('#main').on('click', function(){
				if($('#settings').hasClass('show')) $('#settings').removeClass('show');
			});
			
			$('.status').text('Remote not connected');
			
			$(document).on('touchstart','.link' ,function(){
				$(this).find('i').css("color","#fb8521");
			}).on('touchend', function(){
				$(this).find('i').css("color","#333");
			}).on("touchcancel", function() {
				$(this).find('i').css("color","#333");
			}); 

			
			$.ajax({
					url: '/configuration/', 
					type: 'get'
				}).done(function(data){
					var socket = io.connect(data.localIP+':'+data.remotePort);
					
					socket.on('connect', function(data){
						socket.emit('remote');

						$('.status').text('Remote connected');
						
						$(".left.link").on('click',function(){
							socket.emit('control',{action:"goLeft"}); 
						});

						$(".right.link").on('click',function(){
							socket.emit('control',{action:"goRight"}); 
						});
						
						$(".enter.link").on('click',function(){
							socket.emit('control',{action:"enter"}); 
						});
						
						$(".dashboard.link").on('click',function(){
							socket.emit('control',{action:"dashboard"}); 
						});
						
						$(".back.link").on('click',function(){
							socket.emit('control',{action:"back"}); 
						});		

						$(".pause.link").on('click',function(){
							socket.emit('control',{action:"pause"}); 
						});	

						$(".fullscreen.link").on('click',function(){
							socket.emit('control',{action:"fullscreen"}); 
						});		

						$(".mute.link").on('click',function(){
							socket.emit('control',{action:"mute"}); 
						});		
						
						$(".shuffle.link").on('click',function(){
							socket.emit('control',{action:"shuffle"}); 
						});					
						

						$("#sendValue").on('click',function(){
							if($('#sendValueInput').val() !== ''){
								var keyValue = $('#sendValueInput').val();
								socket.emit('message',keyValue); 
							}
						});									

						socket.on("loading", function(data){
							console.log(data);
						});  
					});
				});
		});

block body
	#settings.hide
		form#setupRemote.validate-form(action='/submitRemote',method='post')
			.row
				label #{lingua.setting_movielocation}
				input(name="moviepath",type="text",placeholder="#{lingua.settings_placeholder_path}", value= movielocation, data-rule-required="true", data-rule-path="true",  data-msg-path="Specify a valid path. Please end with a slash.")
			.row
				label #{lingua.setting_musiclocation}
				input(name="musicpath",type="text",placeholder="#{lingua.settings_placeholder_path}", value= musiclocation, data-rule-required="true", data-rule-path="true",  data-msg-path="Specify a valid path. Please end with a slash.")
			.row
				label #{lingua.setting_tvlocation}
				input(name="tvpath",type="text",placeholder="#{lingua.settings_placeholder_path}", value= tvlocation, data-rule-required="true", data-rule-path="true",  data-msg-path="Specify a valid path. Please end with a slash.")
			.row
				label #{lingua.setting_language}
				select#language(name="language")
					- for lang in availableLanguages
						option(value=lang, selected=lang == language) #{lang}
			.row
				label Local IP (for Remote)
				input#localIP(name="localIP",type="text",placeholder="localhost", value= localIP,data-rule-required="true")	
			.row
				label Remote port (specific port for Remote)
				input(name="remotePort",type="text",placeholder="3001", value= remotePort,data-rule-required="true")	
			.row
				label #{lingua.setting_location}
				input(name="location",type="text",placeholder="#{lingua.settings_placeholder_location}", value= location,data-rule-required="true")					
			.row
				label Spotify Username
				input(name="spotifyUser",type="text", value=spotifyUser)					
			.row
				label Spotify Password
				input(name="spotifyPass",type="password", value=spotifyPass)	
			.row
				label #{lingua.setting_theme}
				select#theme(name="theme")
					- for theme in themes
						option(selected=theme) #{theme}
			.row
				label #{lingua.setting_port}
				input(name="port",type="text",placeholder="#{lingua.settings_placeholder_port}", value= port ,data-rule-required="true")
			.row
				input(type="submit",value="#{lingua.setting_submit}")	
				input(name="screensaver",type="hidden",value= screensaver) 
	
	i.ellipsis.vertical.icon.settings
	#main
		#color-wrapper
			h1 MediacenterJS
				span remote
			.push
			#remote-wrapper
				.back.link
					i.reply.mail.icon
				.left.link
					i.left.arrow.icon
				.enter.link
					i.play.sign.icon
				.right.link
					i.right.arrow.icon
				.pause.link
					i.pause.icon
		#plain-wrapper
			.fullscreen.link
				i.fullscreen.icon
			.mute.link
				i.mute.icon
			.dashboard.link
				i.dashboard.icon
			.keyboard.link
				i.keyboard.icon
			.shuffle.link
				i.shuffle.icon
		
		.status
	#keyboard-wrapper
		input#sendValueInput(name="sendValue",type="text",value="")
		input#sendValue(type="submit",value="#{lingua.setting_submit}")
